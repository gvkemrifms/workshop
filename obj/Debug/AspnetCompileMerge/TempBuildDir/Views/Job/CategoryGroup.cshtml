@model IEnumerable<Aggregates>
<script type="text/javascript">
    $(function () {
       
        $("#txtCategory").autocomplete({
         
            source: function (request, response) {
                $.ajax({
                    url: '/workshop/Job/AutoCompleteCategory',
                    data: "{ 'prefix': '" + request.term + "','Manufacturer':'" + $('#Manufacturer option:selected').val() + "','Aggregates':'" + $('#Aggregates option:selected').val() + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item.Name;
                        }))
                    },
                    error: function (response) {
                        alert("Please select Manufacturer and Aggregates");
                        $("#txtCategory").val('');
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },
            select: function (e, i) {
                $("#txtCategory").val(i.item.val);
            },
            minLength: 1,
            autoFill: true,
            minChars: 1,
            width: 402,
            matchContains: "word",
            select: function (event, ui) {
                var label = ui.item.label;
                var value = ui.item.value;
                document.valueSelectedForAutocomplete = value;
                alert(value + '  ' + 'Already exists in DataBase');
                $('#txtCategory').autocomplete('close').val('');
                return false;
            }
        });
    });
    $(function () {
        $('#txtCategory').change(function () {
            var serviceUrl = '/workshop/Inventory/CheckCategories';
            var data = {
                catVal: $(this).val(),
                Manufacturer: $('#Manufacturer option:selected').val(),
                AggregateVal: $('#Aggregates option:selected').val()
            }
            if ($('#Manufacturer option:selected').val() != 0 && $('#Aggregates option:selected').val() != 0) {
                $.ajax({
                    type: "POST",
                    url: serviceUrl,
                    data: JSON.stringify(data),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response !== 0) {
                            alert('Category Already Present');
                            $('#txtCategory').val('');
                        }

                    },
                    error: function (response) {
                        alert("Please select Manufacturer and Aggregates");
                        $("#txtCategory").val('');
                    },
                    failure: function (response) {
                        alert("Please select Manufacturer");
                    }

                });
            }
            else
            {
                alert("Please select Manufacturer and Aggregates");
                $("#txtCategory").val('');
            }
        })
    })
    function Validations() {
        var ddlAggregates = $('#Aggregates option:selected').text().toLowerCase();
        if (ddlAggregates === '--select--' || ddlAggregates === '') {
            return alert("Please select Aggregates");

        }
        var categoryName = $('#txtCategory').val();
        if (categoryName === "") {
            return alert('Category is Mandatory');

        }

        return true;
    }

    $(function () {
        $(document).ready(function () {

            $("#Aggregates").prop("disabled", true);

            $("#Manufacturer").change(function () {
                if ($('#Manufacturer option:selected').text().toLowerCase() === "--select--") {
                    $('#Aggregates option:selected').text("");
                    $('#Aggregates').prop("disabled", true);

                    return false;
                }
                var serviceUrl = '/workshop/Job/GetManufacturerNameForAggregates';
                debugger;
                var data = {
                    ManufacturerId: $('#Manufacturer').val()

                };
                $.ajax({
                    url: serviceUrl,
                    type: "POST",
                    data: JSON.stringify(data),
                    datatype: "json",
                    contentType: 'application/json',

                    success: function (response) {

                        $('#Aggregates').empty();
                        $('#Aggregates').append('<option value=0 selected="selected">--Select--</option>');
                        for (var i = 0; i < response.length; i++) {

                            $('#Aggregates').append("<option value='" +
                                response[i].split('-')[1] +
                                "' >" +
                                response[i].split('-')[0] +
                                "</option>");

                        }

                        $('#Aggregates').prop("disabled", false);


                    }
                });
                return true;
            });
        });
        $('#btn').click(function() {
            var serviceUrl = '/workshop/Job/CategoryGroup';
            var data = {
                ManufacturerId: $('#Manufacturer option:selected').val(),
                AggregateId: $('#Aggregates option:selected').val(),
                CategoryName: $('#txtCategory').val()
            };
            $.ajax({
                type: "POST",
                url: serviceUrl,
                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(response) {
                    if (response != 0) {
                        alert('Record Inserted');
                    }

                },
                failure: function(response) {
                    alert(response.responseText);
                }

            });
        });
    });
</script>
<style>
    .form-group.required .control-label:after {
        content: "*";
        color: red;
    }
</style>
<div class="panel panel-primary" style="height: 100%; margin-top: 20px; width: 100%;" align="center">
    <div class="panel-heading">
        Categories
    </div>
    <div class="panel-body" style="margin-top: 30px">
        <div class="col-lg-6">
            <form class="form-horizontal">
                <div class="form-group required">
                    <label class="control-label col-lg-4">Manufacturer</label>
                    <div class="col-lg-8">
                        @Html.DropDownList("Manufacturer", ViewBag.Manufacturers as IEnumerable<SelectListItem>, "--Select--", new {@class = "form-control"})
                    </div>
                </div>
                
                <div class="form-group required">
                    <label class="control-label col-lg-4">Category</label>
                    <div class="col-lg-8">
                        <input type="text" class="form-control" id="txtCategory" style='text-transform:uppercase' placeholder="Category">
                    </div>
                </div>

            </form>
        </div>
        <div class="col-lg-6">
            <form class="form-horizontal">
                <div class="form-group required">
                    <label class="control-label col-lg-4">Aggregates</label>
                    <div class="col-lg-8">
                        @Html.DropDownList("Aggregates", ViewBag.AggregatesDrop as IEnumerable<SelectListItem>, "--Select--", new {@class = "form-control"})
                    </div>
                </div>
            </form>
            </div>
        <div class="col-lg-4">
            <form class="form-horizontal">
                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-4" style="margin-bottom: 60px">
                        <button type="submit" id="btn" class="btn btn-default" style="background-color: blue; color: white; margin-bottom: -150px;" onclick="if (!Validations()) return false;">Submit</button>
                    </div>

                </div>
            </form>

        </div>
    </div>

    <div class="col-lg-6" style="width: 100%">
        <form class="form-horizontal">
            <div class="form-group">
                <div style="margin-top: 30px">
                    @Html.Partial("_Category");
                </div>

            </div>
        </form>

    </div>
</div>