@model IEnumerable<Fleet_WorkShop.Models.InfraStructure>

@{ ViewContext.FormContext = new FormContext(); }
<script>
    $(function () {
        $("#txtCost").on("input", function (evt) {
            var self = $(this);
            self.val(self.val().replace(/[^0-9\.]/g, ''));
            if ((evt.which != 46 || self.val().indexOf('.') != -1) && (evt.which < 48 || evt.which > 57)) {
                evt.preventDefault();
            }
        });
    })
    function Validations() {
        var ddlCategory = $('#Category option:selected').text().toLowerCase();
        if (ddlCategory === '--select--' || ddlCategory === '') {
            return alert("Please select Category");
        }
        

        var CategoryName = $('#txtCategoryName').val();
        if (CategoryName === "") {
            return alert('Category Name is Mandatory');
        }
        var Quantity = $('#txtQuantity').val();
        if (Quantity === "") {
            return alert('Quantity is Mandatory');
        }      
        return true;
    }
    $(function () {
        $('#btn').click(function () {
            debugger;
            var serviceURL = '/workshop/Employee/SaveInfraStructureDetails';
            var data = {
                InfraName: $('#txtCategoryName').val(),
                CategoryId: $('#Category').val(),
                Quantity: $('#txtQuantity').val(),
                Cost:$('#txtCost').val()

            };
            $.ajax({
                type: "POST",
                url: serviceURL,
                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response != 0) {
                        alert('Record Inserted');
                    }

                },
                failure: function (response) {
                    alert(response.responseText);
                }
                //error: function (response) {
                //    alert(response.responseText);
                //}
            });

        });

    });
</script>
<style>
    .form-group.required .control-label:after { 
        content:"*";
        color:red;
    }
</style>
<div class="panel panel-primary" style="width: 100%; height: 100%; margin-top: 20px;" align="center">
    <div class="panel-heading">
        InfraStructure
    </div>
    <div class="panel-body">
        <div class="col-lg-6">
            <form class="form-horizontal">
                <div class="form-group required">
                    <label class="control-label col-lg-4">InfraStrucutre Name</label>
                    <div class="col-lg-8">
                        @*@Html.TextBoxFor(x => x.EmployeeName, new { @class = "form-control", placeholder = "Name",id="txtEmployeeName" })*@
                        <input type="text" class="form-control" id="txtCategoryName" placeholder="Name">
                        @*@Html.ValidationMessageFor(m => m.EmployeeName, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                <div class="form-group required">

                    <label class="control-label  col-lg-4">Category</label>
                    <div class="col-lg-8 ">
                        @*<input type="text" class="form-control" id="txtCategoryName1" placeholder="Name">*@
                        @Html.DropDownList("Category", ViewBag.categoryName as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control" })
                    </div>
                </div>
            </form>
        </div>
        <div class="col-lg-6">
            <form class="form-horizontal">
                <div class="form-group required">
                    <label class="control-label col-lg-4">Quantity</label>
                    <div class="col-lg-8">
                        @*@Html.TextBoxFor(x => x.EmployeeName, new { @class = "form-control", placeholder = "Name",id="txtEmployeeName" })*@
                        <input type="text" class="form-control" id="txtQuantity" placeholder="Name" onkeyup="if (/\D/g.test(this.value)) this.value = this.value.replace(/\D/g,'')">
                        @*@Html.ValidationMessageFor(m => m.EmployeeName, "", new { @class = "text-danger" })*@
                    </div>
                </div>
            </form>
        </div>
        <div class="col-lg-6">
            <form class="form-horizontal">
                <div class="form-group required">
                    <label class="control-label col-lg-4">Cost</label>
                    <div class="col-lg-8">
                        <input type="text" class="form-control" id="txtCost" placeholder="Cost" required="required" onkeyup="if (/\D/g.test(this.value)) this.value = this.value.replace(/\D/g,'')">
                    </div>
                </div>
            </form>
        </div>
        <div style="margin-bottom: 90px" class="col-lg-6">
            <form class="form-horizontal">
                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-4" style="margin-bottom: 30px">
                        <button type="submit" id="btn" class="btn btn-default"  style="margin-bottom: -150px; background-color: blue; color: white" onclick="if (!Validations()) return false;">Submit</button>
                    </div>
                    <div class="col-sm-2">
                        <button type="submit" class="btn btn-default" style="margin-bottom: -150px; background-color: blue; color: white">Reset</button>
                    </div>
                </div>
            </form>

        </div>

        <div class=" col-lg-6" style="width:100%">
                <form class="form-horizontal">
                    <div class="form-group">
                        <div style="margin-top:30px">
                            @Html.Partial("GetInfraStructureDetails");
                        </div>

                    </div>
                </form>

            </div>


    </div>


    <div class="panel-footer">

    </div>
</div>